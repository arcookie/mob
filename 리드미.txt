
이 프로젝트는 일반 프로그램을 실시간 다자간 협업이 가능한 프로그램으로 바꿀수 있는 라이브러리 모듈을 개발하기 위한 프로젝트 입니다.

이 프로젝트의 명칭은 "몹" 입니다.

이 프로젝트의 아이디어는 간단합니다. 즉, 서로 다른 디바이스들에 존재하는 여러개의 SQLite DB 들의 스키마와 데이터가 실시간으로 동기화될 수 있도록 Alljoyn IOT 기술과 몹 기술을 이용하여 구현합니다.

이제 일반 프로그램이 이 Mob 기술이 탑재된 SQLite DB 를 데이터 저장소로 이용하기만 하면 서로 다른 디바이스들에 존재하는 그 일반 프로그램들은 그 모든 기능이 다자간 실시간 협업 가능케 됩니다.

이때 구현되는 Mob 기술의 특징적인 부분은 데이터 누락에 대한 복구 부분과 충돌 처리 부분입니다. 서로 다른 디바이스들에 존재하는 프로그램들간에 그 데이터가 동기화 되었다는 것은 누락에 대한 복구가 완벽히 이루어지고, 충돌처리가 완전히 해소되어 전체 데이터가 같은 순서로 사용되었다는 것을 뜻합니다.

첫째, 데이터 누락에 대한 복구는 모든 발생하는 데이터에 일련번호를 부여하여 그 일련번호와 alljoyn connection unique name 의 조합을 이용하여 그 누락 여부를 판단합니다.

즉, 어떤 서비스에 특정한 alljoyn connection unique name 으로 연결된 프로그램에서 발생하는 모든 데이터는 1씩 증가하는 일련번호가 부여되므로, 일련번호가 누락된다면 데이터의 누락을 판단할수 있게 되어 데이터 생산자에게 재전송을 요구하여 누락을 재수신합니다.

이 방식은 어떤 참여자가 이미 한참동안 진행중인 협업에 접속하는 경우 그간의 누적 데이터를 수신해야 한다면 별도의 작업 없이 그간의 누적 데이터가 누락으로 판별되어 복구되는 방식으로 초기 작업환경을 구성토록 할수 있습니다.

둘째, 충돌 처리의 경우, 프로그램이 사용하는 DB 내의 모든 테이블은 서로간에 독립적으로 충돌이 일어나지 않습니다. 

한 테이블 내의 작업은 바로 직전 작업과의 쿼리문 차이가 액션 데이터로 추출되어 전송되는데(sqlite 의 sqldiff.c 참조), 발생하는 액션들은 이전 액션위에 누적되어 발생하는 것으로, 이전 액션의 시리얼 넘버와 alljoyn connection unique name 이 함께 전송되어 액션의 누적을 서로간에 동기화 시킵니다.

즉, 서로 연결되어 있는 참여자들의 모든 액션이 똑같은 순서로 실행된다면 모든 참여자들은 동기화가 된 것입니다. 

여기서 충돌이란 두명 이상의 참여자의 액션 누적 정보의 부모가 같은것을 말합니다. 즉 액션 부모가 같다는 것은 그 액션들이 거의 동시에 일어났다는 것을 뜻합니다. 몹은 이경우 부모가 같은 액션들을  alljoyn connection unique name 의 알파벳 순으로 정렬하여 반영합니다. 

그러나 순서가 낮은 액션이 이미 반영되어 있다면 이를 언두한 후 액션을 가하게 됩니다.

이것이 mob 엔진 내부에서 일어나게 되므로 실제로 프로그램의 DB 는 데이터 동기화에 대해 신경쓸 필요없이 마치 스텐드얼론형 프로그램처럼 개발할수 있게 됩니다.

mob 협업 엔진은 쿼리문 문자열 뿐만 아니라 쿼리문에 경로로 포함된 다중의 파일들까지 자동으로 동기화시킵니다. 이경우 모든 경로는 파일 URI 타입, 즉, "file://..." 의 형식으로 되어있어야 합니다.

mob 프로젝트는 현재 

윈도우 기반 으로 되어있습니다.

그러나 몇몇 파일 시스템 관련 윈도우 함수들을 제외하고 특별한 윈도우 종속성은 없습니다.

mob 소스코드는 아래의 폴더구조로 되어있습니다.



...


이중 sample 은 sqlite 의 shell.c 를 이용한 것입니다.

윈도우 상에서 비주얼 스튜디오 2013 이상을 이용하여 프로그램을 만들고 

sample -s test 

와 같은 방식으로 실행합니다.

이때 입력 변수 타입은

sample [] name

이고 협업을 개설할때 -s 이름, 협업에 참여할때 -j 이름 과 같은 식으로 커맨드라인으로 실행합니다.

그러면 sqlite 콘솔이 실행되는데 

create table test (num int);

이런 식으로 일반적인 쿼리문을 실행하면 연결된 프로그램들의 DB 들도 동기화됩니다.

select * from test;

와 같은 식으로 동기화 여부를 확인하세요.

이 프로젝트는 export 함수들의 사용방식을 참조하여 간단히 일반 프로그램에도 응용할수 있습니다.

차후 이 export 를 단순하게 이용하여 프로그램에 협업기능을 구현한 프로그램들이 지속적으로 개발될 예정입니다. 