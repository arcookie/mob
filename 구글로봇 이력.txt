머신의 자연스러움을 구현하기 위해서는 먼저 자연에 대한 정의를 해야 합니다.

자연은 컨텍스트와 특이점으로 이루어져 있습니다.

컨텍스트는 질량처럼 어떤 물체의 변하지 않는 특성이고, 특이점은 컨텍스트의 특정 시공간, 특정 환경상의 매핑입니다.

자연을 기술하는 모든 언어는 특이점으로 사상된 컨텍스트에 대한 기술입니다.

이 무거운 가방을 옮기기 위해서는 두손을 다 써야 한다.

종이가 날카로우므로 조심하지 않으면 손가락을 베일지도 몰라.

위의 문장에서 가방은 이 환경에서 무거운 것이라는 특이점을 가지고 있으며 가방을 옮길수 있는 특이점을 가진 손은 가방을 옮긴다는 이벤트를 위해서 두손을 모두 써야 합니다.

종이는 이 환경에서 얆고 날카롭다는 특이점을 가지고 있으며 종이를 잡을수 있는 특이점을 가진 손가락은 종이를 잡는다는 이벤트에서 손상을 입을수도 있다는 가능성을 가집니다.

이처럼 컨텍스트와 특이점은 그 이벤트를 구성하고 있는 구성요소로써 우리는 이 이벤트를 문장으로 구성하여 파악할수 있습니다.

머신에 의한 이벤트를 문장(혹은 특정 문법으로 구성된 정의)으로 구성하여 딥러닝에서 활용하기 위해서 우리는 먼저 머신의 컨텍스트와 특이점이라는 프레임웍을 구현해야 합니다.

즉, 머신은 물리세계를 컨텍스트와 특이점으로 분류해야 하고, 그를 문장으로 구성하여 정의할수 있어야 합니다. 이런 지적 능력을 프레임웍이라 합니다.

컨텍스트와 특이점이 구현되었을때 이에 문법을 부여하여 활용하는 것은 쉽습니다.

텐서 개념을 좀 확장해서 생각해보도록합시다. 텐서의 요소로는 수식과 상수, 문자열, 커맨드(하드웨어적, 소프트웨어적) 또는 함수, 시계열의 로우 데이터, 그리고 다른 텐서가 있을수 있습니다.

두개의 텐서간 연산은 같은 크기만 가능하지만 만약 다른 크기가 가능하다면 서로다른 크기의 텐서 연산에서 연산이 일어나는 지점이 특이점입니다.

프레임웍은 텐서간의 연산을 마치 필드처럼 지원해야 합니다.

물리세걔도 텐서로 해석해 두어야 한다.

예를들어 손가락은 마디들로 구성되어 있습니다. 마디는 입체각으로 움직입니다. 손가락은 의지라는 이벤트를 구현하기 위해서 다른 손가락 마디들과 텐서 연산을 하여 그 입체각을 정해야 합니다(머리에서 손가락의 각도를 일일히 지정해 주는것이 아니라).

이때의 결과 텐서를 주먹쥠 텐서라고 정의한다면 주먹을 쥐고 일어선다는 것은 주먹을 쥐고 일어서는 이벤트(의지, 또는 문장)에서는 손가락 텐서들이 오퍼레이션하고 팔꿈치와 손에 오퍼레이션하고 몸과 다리가 오퍼레이션을 합니다.

이때 머신의 컨텍스트는 텐서이고, 특이점은 텐서간의 오퍼레이션 포인트, 문장은 텐서들간의 오퍼레이션이 순차적으로 이루어지는 이벤트입니다.

이런 페러다임이 구현된다면 머신을 이용한 문장은 딥러닝에서 활용될수 있는 일상적인 텍스트로 구현될수 잇습니더ㅏ.

두 손을 이용해서 이 가방을 들어서 저기에 놓아라

종이의 날카로운 부분을 피해서 종이를 집어라.

저는 이 기술의 기반기술을 구현하고 있습니다.

제가 최근에 가장 주력하고 있는 분야는 다자간 실시간 협업의 일반화입니다.

그리고 이전에는 텐서적인 애플리케이션 스프레드시트 프로그램을 개발하였숩ㄴ다.

지금의 제 관심사는 두 기술을 머지하여 로보틱스 프레임웍을 만드는 것입니다.

이것이 구현되는 경우 지금까지와는 조금 다른방식으로 진보를 이룰 수 있습니다.

